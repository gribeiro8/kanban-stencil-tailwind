/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { ICard } from "./components/board/types";
export namespace Components {
    interface BoardKanban {
    }
    interface CardKanban {
        "date": string;
        "priority": 'high' | 'medium' | 'low';
        "project": string;
        /**
          * The data card
         */
        "titled": string;
    }
    interface FormTask {
        "card": ICard;
        "handleUpdateCard": (card: ICard, type: string) => void;
        "selectedCol": number;
    }
    interface HeaderTop {
    }
    interface ModalBox {
        "closeFunction": () => void;
        "titleHeader": string;
        "visible": boolean;
    }
    interface ViewTask {
        "cod": number;
        "date": string;
        "deleteTask": (id: number) => void;
        "editTask": (task: ICard) => void;
        "handleChangeColumn": (idCard: number, newColumn: number) => void;
        "priority": 'high' | 'medium' | 'low';
        "project": string;
        "titled": string;
    }
}
declare global {
    interface HTMLBoardKanbanElement extends Components.BoardKanban, HTMLStencilElement {
    }
    var HTMLBoardKanbanElement: {
        prototype: HTMLBoardKanbanElement;
        new (): HTMLBoardKanbanElement;
    };
    interface HTMLCardKanbanElement extends Components.CardKanban, HTMLStencilElement {
    }
    var HTMLCardKanbanElement: {
        prototype: HTMLCardKanbanElement;
        new (): HTMLCardKanbanElement;
    };
    interface HTMLFormTaskElement extends Components.FormTask, HTMLStencilElement {
    }
    var HTMLFormTaskElement: {
        prototype: HTMLFormTaskElement;
        new (): HTMLFormTaskElement;
    };
    interface HTMLHeaderTopElement extends Components.HeaderTop, HTMLStencilElement {
    }
    var HTMLHeaderTopElement: {
        prototype: HTMLHeaderTopElement;
        new (): HTMLHeaderTopElement;
    };
    interface HTMLModalBoxElement extends Components.ModalBox, HTMLStencilElement {
    }
    var HTMLModalBoxElement: {
        prototype: HTMLModalBoxElement;
        new (): HTMLModalBoxElement;
    };
    interface HTMLViewTaskElement extends Components.ViewTask, HTMLStencilElement {
    }
    var HTMLViewTaskElement: {
        prototype: HTMLViewTaskElement;
        new (): HTMLViewTaskElement;
    };
    interface HTMLElementTagNameMap {
        "board-kanban": HTMLBoardKanbanElement;
        "card-kanban": HTMLCardKanbanElement;
        "form-task": HTMLFormTaskElement;
        "header-top": HTMLHeaderTopElement;
        "modal-box": HTMLModalBoxElement;
        "view-task": HTMLViewTaskElement;
    }
}
declare namespace LocalJSX {
    interface BoardKanban {
    }
    interface CardKanban {
        "date"?: string;
        "priority"?: 'high' | 'medium' | 'low';
        "project"?: string;
        /**
          * The data card
         */
        "titled"?: string;
    }
    interface FormTask {
        "card"?: ICard;
        "handleUpdateCard"?: (card: ICard, type: string) => void;
        "selectedCol"?: number;
    }
    interface HeaderTop {
    }
    interface ModalBox {
        "closeFunction"?: () => void;
        "titleHeader"?: string;
        "visible"?: boolean;
    }
    interface ViewTask {
        "cod"?: number;
        "date"?: string;
        "deleteTask"?: (id: number) => void;
        "editTask"?: (task: ICard) => void;
        "handleChangeColumn"?: (idCard: number, newColumn: number) => void;
        "priority"?: 'high' | 'medium' | 'low';
        "project"?: string;
        "titled"?: string;
    }
    interface IntrinsicElements {
        "board-kanban": BoardKanban;
        "card-kanban": CardKanban;
        "form-task": FormTask;
        "header-top": HeaderTop;
        "modal-box": ModalBox;
        "view-task": ViewTask;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "board-kanban": LocalJSX.BoardKanban & JSXBase.HTMLAttributes<HTMLBoardKanbanElement>;
            "card-kanban": LocalJSX.CardKanban & JSXBase.HTMLAttributes<HTMLCardKanbanElement>;
            "form-task": LocalJSX.FormTask & JSXBase.HTMLAttributes<HTMLFormTaskElement>;
            "header-top": LocalJSX.HeaderTop & JSXBase.HTMLAttributes<HTMLHeaderTopElement>;
            "modal-box": LocalJSX.ModalBox & JSXBase.HTMLAttributes<HTMLModalBoxElement>;
            "view-task": LocalJSX.ViewTask & JSXBase.HTMLAttributes<HTMLViewTaskElement>;
        }
    }
}
